
$Initial_conditions                
 
T0 = 0.05 0.0 0.04 0.06 $U;
T1 = 0.0 0.0 0.0 1 $C;
T2 = 0.0 0.0 0.0  0.0 $U;
T8= 0.0  0.0 0.0 0.0 $U ;
MR= 300.0  0.0 300.0 400.0 $T ;
MI= 0.0  0.0 0.0 0.0 $U;
MA= 0.0  0.0 0.0 0.0 $U;
IG= 0.0  0.0 0.0 0.0 $T;
I12= 0.0  0.0 0.0 0.0 $L;
I4= 0.0  0.0 0.0 0.0 $U ;
I10= 0.0  0.0 0.0 0.0 $U ;
BI= 0.0  0.0 0.0 0.0 $U ; 
BE= 0.5  0.0 0.0 0.0 $U ;
FA = 0.0;
Rand0= 0.0  0.0 0.0 0.0 $U ;
ab_23_2 = 0.1;    
alpha1= 0.03  0.001 0.002 0.03 $T ;
alpha2= 1.2  0.001 1.2 1.2 $U ;
alpha3= 0.03  0.001 0.03 0.03 $U ;
alpha3a= 0.03  0.001 0.03  0.3 $U;
alpha4= 0.03  0.001 0.03 0.03 $U ;
alpha5a= 0.03  0.001 0.03 0.03 $U ;
alpha5b= 0.024  0.0 0.024 0.024 $U ;
alpha7= 0.063  0.0 0.063 0.063 $U ;
alpha8= 0.0003  0.0 0.0003 0.0003 $U ;
alpha10= 0.0009  0.0005 0.0007 0.0009  $C;
alpha11= 0.000028  0.00000001 0.000025 0.000028  $L; 
alpha12= 0.0028  0.001 0.0025 0.0028  $U ;
alpha12a= 0.002  0.0 0.002 0.002 $U ;
alpha13= 0.0125  0.0 0.0125 0.0125 $U ;
alpha14= 0.025  0.0 0.025 0.025 $U ;
alpha16= 0.001  0.0 0.001 0.001 $U ;
alpha17= 0.001  0.0 0.001 0.001 $U ;
alpha18= 0.0002  0.0 0.0002 0.0002 $U ;
alpha19= 0.47  0.0 0.47 0.47 $U ; 
alpha20= 0.29  0.0 0.29 0.29 $U ;
alpha21= 0.28;  %0.0 0.28 0.0 $U ;	
alpha22= 0.00008; //  0.0 0.00008;
alpha23= 0.00008; // 0.0 0.00008;
alpha30= 0.005; //  0.0 0.005;
alpha31= 0.01; //  0.0 0.01; 
alpha32= 0.005; //  0.0 0.005;
alpha33= 0.005; //  0.0 0.005;
c0= 10.0; //  0.0 10.0;
c7= 10.0; //  0.0 10.0;
c8= 50.0; //  0.0 50.0;
c9= 500.0; //  0.0 500.0;
c10= 5.0; //  0.0 5.0;
c10a= 5.0; //  0.0 5.0;
c12= 5.0 ; // 0.0 5.0;
c18= 5.0; //  0.0 5.0;
c2= 0.05; //  0.0 0.05;
c13 =0.1; //  0.0 0.1;
c5a= 3.0 ; // 0.0 3.0; 
c5b= 3.0; //  0.0 3.0;
c15= 300.0 ; // 0.0 300.0;
c22= 2.5; //  0.0 2.5;
c23= 5.0; //  0.0 5.0; 
c28= 1000.0; //  0.0 1000.0;
c50= 10.0 ; // 0.0 10.0;
c52= 20.0 ; // 0.0 20.0;
k2= 1.1;// 1.0 1.0 1.1 $U; 
k3= 0.3 0 0.2 0.3 $U;
k4= 0.36; //  0.0 0.36;
k6= 1.2936; //  0.0 1.2936; 
k7= 0.15 ; // 0.0 0.15;
k14a= 50.0; // 0.0 50.0;
k14b= 5.0; //  0.0 5.0;
k15= 0.0594737; //  0.0 0.0594737;
k17= 0.11 ; // 0.0 0.11;
k18= 0.0017 0.001 0.0012 0.0040 $U ; // 0.0 0.0017;	
k52= 50.0; //  0.0 50.0;
mut0= 0.3333 ; // 0.0 0.3333;
mut1= 0.3333; //  0.0 0.3333;
mut2= 0.3333; //  0.0 0.3333;
mut8= 0.3333; //  0.0 0.3333;
mur =0.011; //  0.0 0.011;
mua= 0.3333 ; // 0.0 0.3333;
mui= 0.0005; //  0.0 0.0005;
muig= 3.0 ; // 0.0 3.0;
mui12= 1.18 ; // 0.0 1.18;
mui4= 2.77; //  0.0 2.77;
mui10= 3.6968; //  0.0 3.6968;
mufa= 10.0 ; // 0.0 10.0;  
p= 0.7; //  0.0 0.7;
p1= 0.5 ; // 0.0 0.5;
p2= 0.5 ; // 0.0 0.5;	
p3= 0.5 ; // 0.0 0.5;
p4= 0.5 ; // 0.0 0.5;
p5= 0.6 ; // 0.0 0.6;
p6= 0.5 ; // 0.0 0.5;
p7= 0.5 ; // 0.0 0.5;
N= 20.0 ; // 0.0 20.0;
r4g= 20.0; //  0.0 20.0;
r10g= 5.0; //  0.0 5.0;
r1012= 3.0; //  0.0 3.0;
sr= 3.3; //  0.0 3.3;
w= 0.014; //  0.0 0.014;
s8= 0.2; //  0.0 0.2;	
c4 =10.0; //  0.0 10.0;
c14a= 5.0; //  0.0 5.0;
sc1= 0.1; //  0.0 0.1;
sc2= 0.02; //  0.0 0.02;
sc3= 0.1; //  0.0 0.1;
sc4= 0.05; //  0.0 0.05;
sc5= 0.1; //  0.0 0.1;
sc6= 0.2 ; // 0.0 0.2;
s10= 0.5; //  0.0 0.5; 
Pw= 2.0 ; // 0.50 2.0;
N1= 20.0 ; // 0.0 20.0;
N2= 1.0 ; // 0.0 1.0; 
f1 =0;
f2=0;
f3=0;
f4=0;
f5=0;
f6=0;
TINY = 1e-200;
f7= 10.0 ; // 0.0 10.0;
f8= 5.0 ; //  0.0 5.0;



$Equations


f1 = r4g*(((1.0/p1)-1.0)/(p1+1.0)) ;
f2 = (1.0/r4g)*(((1.0/p2)-1.0)/(p2+1.0)) ;
f3 = r4g*(((1.0/p3)-1.0)/(p3+1.0));
f4 = r1012*(((1.0/p4)-1.0)/(p4+1.0));	
f5 = (1.0/r10g)*(((1.0/p5)-1.0)/(p5+1.0)) ;
f6 = r10g*(((1.0/p6)-1.0)/(p6+1.0)) ;
t8recruit=alpha3a*(MA+w*MI);
t8death=mut8*T8;
x14 = BE+w*BI;
x23 = MA/(MA+c15);
x24a = MA/(MA+c5a);
x1 = alpha3*(MA+w*MI)*tbint0;
x2 = alpha3*(MA+w*MI)*(1-tbint0) ;
x3 = k3*MR*(IG/(IG+f3*I4+sc3))*((x14+FA)/(x14+FA+c8));
x4 = ((MI==0)?0.0:((T1+T8)/(MI)));
x4a =((MI==0)?0.0:(T8/MI));
x5 = k4*MA*(I10/(I10+s8));
x6 = k6*(IG/(IG+f1*I4+sc1))*I12*T0;
x7 = k7*(I4/(I4+f2*IG+sc2))*T0;
x8 = k17*MI*exp(Pw*log(BI))/(exp(Pw*log(BI))+exp(Pw*log(N*MI))+TINY);
x10 = k18*MR*BE;
x12 = k14a*MI*(x4/(x4+c4));
x12a = k52*MI*(x4a/(x4a+c52));
x13 = k2*MR*(BE/(BE+c9));
x15 = exp(Pw*log(BI))/(exp(Pw*log(BI))+exp(Pw*log(N*MI))+TINY);
x16 = alpha19*BI*(1.0-x15);
x11 = 0.5*N*x13;
x9 = alpha2*(x23)*T0;
x17 = alpha5b*T8*(x14/(x14+c10))*(I12/(I12+sc4));
x18 = alpha21*(MR*0.5+0.5*300)*(x14/(x14+c28));
x19 = (sc6/(I10+f6*IG+sc6))*(alpha14*MA);
x20 = alpha7*(I12/(I12+f4*I10+sc4))*T0*x24a;
x21 = mut0*T0;
x30 = (sc3/(IG+f3*I4+sc3))*(c8/(x14+c8));
x50 = IG+x14;
x51 = f1*I4+f7*I10;
x52 = k14b*MI*x53;
x53 = FA/(FA+f8*I10+c14a);
Pw = 2.0;
int1 = IG/(IG+f1*I4+sc1);
int2 = I4/(I4+f2*IG+sc2);
int3 = IG/(IG+f3*I4+sc3);
int4 = I12/(I12+f4*I10+sc4);
int5 = IG/(IG+f5*I10+sc5);
int6 = sc6/(I10+f6*IG+sc6);
tbint0 = BI/(BI+c0);
tbint1 = x14/(x14+c8);
pint = BI/(BI+N*MI+TINY);
pintinv = 1.0/(BI+N*MI+TINY);
cint = x4/(x4+c4);

TB = BI+BE;
T = T0+T1+T2+T8;
M = MI+MR+MA;
MIp = MI/(MI+MA+MR);
MITIratio = BI/(MI+TINY);

T0' = alpha1*(MA+w*MI)+x9-x21-x6-x7;
T1' = x1+x6-mut1*T1;
T2' = x2+x7-mut2*T2 ;
//T0' = alpha1*(MA+w*MI)+x9-x21-x6-x7;
T8' = t8recruit-t8death;
MR'  = sr+alpha4*(MA+w*MI)+x18+x5-x13-x3-mur*MR;
MI' =  x13-x12-(x12a)-x8-x52-mur*MI;
MA' = x3-x5-mur*MA;
IG' = ((TimeAct<(500.0))?1.0:1.0)*(x17+alpha5a*T1*(x24a))-muig*IG;
I12' = ((TimeAct<(500.0))?1.0:1.0)*(alpha8*MA+alpha22*MI*(IG/(IG+f7*I10+c22))+alpha23*MR*(x14/(x14+c23)))-mui12*I12 ;
I4' =  ((TimeAct<(500.0))?1.0:1.0)*(alpha11*T0+alpha12*T2+alpha12a*T8)-mui4*I4;
I10' = ((TimeAct<(500.0))?1.0:1.0)*(x19+alpha16*T1+alpha17*T2+alpha18*(I12/(I12+c2))*T0)-mui10*I10;
FA'  = ((TimeAct<(1000.0))?1.0:1.0)*(alpha30*MI+alpha31*MA*(x50/(x50+x51+s10))+(alpha32*T1+alpha33*T8)*(x14/(x14+c10a)))-mufa*FA;
BI' = x16+x11-x12*N-x8*N-mui*BI-N*(x12)-N*(x12a)-x52*N;
BE' = x8*N+alpha20*BE-x11-k15*(MA*BE)-x10+N2*x52+mui*BI+N1*(x12);


// The commands should be in the following order:

$StartTime 0.0                 // Simulation initial time
$StopTime  500.0		       // Simulation stop time
$timestep  0.01		       // Timestep, usually between 0.1 and 0.0001	  
$timefigs  1		       // To save data for figures 
 
$plot BE T0 T1 T2 T8 MR MI MA IG I12 I4 I10 FA BI TB T M MIp MITIratio; 
      // plot the variables of the list		
      // The list should ends in ; (semicolon)

// Different methods, choose just one: 

//$Method $BSStepRational          // Bulirsch-Stoer Rational Function Extrapolation
//$Method $BSStepPoly		   // Bulirsch-Stoer Polynomial Extrapolation
$Method $Rk4			   // Four Order Runge-Kutta 
//$Method $AdaptiveRk4		   // Adaptive Runge-Kutta 
//$Method $StiffRosenbrock         // fourth-order Rosenbrock, you need to write the Jacobian function.
//$Method $StiffBSStep

$lhs 20  alpha2 alpha4 alpha3 alpha10 k18;  // to run LHS with 10 simulations using 
						// parameters in the list.
						// The parameters should have ranges already defined.
						// The list should end in ; (semicolon)
//$seed 3456;                 // Set the random number generator with the computer clock ($Clock)
$seed $clock;
// or a number.	 
$prcc 
